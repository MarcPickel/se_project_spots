!function(){"use strict";function e(e,t,r,n){e.textContent=t?n:r}const t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},r=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},n=(e,t,r)=>{(e=>e.some(e=>!e.validity.valid))(e)?o(t,r):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},o=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)};var a;a=t,document.querySelectorAll(a.formSelector).forEach(e=>{((e,t)=>{const o=Array.from(e.querySelectorAll(t.inputSelector)),a=e.querySelector(t.submitButtonSelector);n(o,a,t),o.forEach(s=>{s.addEventListener("input",function(){((e,t,n)=>{t.validity.valid?r(e,t,n):((e,t,r,n)=>{e.querySelector(`#${t.id}-error`).textContent=r,t.classList.add(n.inputErrorClass)})(e,t,t.validationMessage,n)})(e,s,t),n(o,a,t)})})})(e,a)});const s=document.querySelector(".profile__avatar-container"),c=s.querySelector(".profile__avatar"),i=s.querySelector(".profile__avatar-button"),l=document.querySelector(".profile__name"),d=document.querySelector(".profile__description"),u=document.querySelector("#avatar-modal"),m=u.querySelector("#profile-avatar-form"),_=m.querySelector("#avatar-image-input"),h=u.querySelector(".modal__submit-button"),v=u.querySelector(".modal__close-button"),f=document.querySelector(".profile__edit-button"),S=document.querySelector("#edit-profile-modal"),p=S.querySelector(".modal__submit-button"),y=S.querySelector(".modal__close-button"),b=S.querySelector("#edit-profile-form"),q=S.querySelector("#profile-name-input"),k=S.querySelector("#profile-description-input"),L=document.querySelector(".profile__add-button"),g=document.querySelector("#new-post-modal"),E=g.querySelector(".modal__submit-button"),C=g.querySelector(".modal__close-button"),U=g.querySelector("#new-post-form"),$=g.querySelector("#card-image-input"),x=g.querySelector("#card-caption-input");let w,D;const I=document.querySelector("#delete-card-modal"),A=I.querySelector(".modal__form"),R=I.querySelector(".modal__close-button"),T=I.querySelector(".modal__cancel-button"),N=document.querySelector("#preview-modal"),P=N.querySelector(".modal__close-button"),B=N.querySelector(".modal__image"),O=N.querySelector(".modal__caption"),j=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse)}editAvatarImage({avatar:e}){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}editUserInfo({name:e,about:t}){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}getNewCard({name:e,link:t}){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._checkResponse)}removeCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}changeLike(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"5ef325c5-f7c1-4719-bb32-13415ad57957","Content-Type":"application/json"}});function J(e){e.classList.add("modal_is-opened"),e.addEventListener("mousedown",z),document.addEventListener("keydown",M)}function H(e){e.classList.remove("modal_is-opened"),e.removeEventListener("mousedown",z),document.removeEventListener("keydown",M)}function z(e){e.target.classList.contains("modal")&&H(e.target)}function M(e){if("Escape"===e.key){const e=document.querySelector(".modal_is-opened");e&&H(e)}}j.getAppInfo().then(([e,t])=>{e.forEach(function(e){const t=K(e);G.append(t)}),c&&(c.src=t.avatar,c.alt=t.name),l.textContent=t.name,d.textContent=t.about}).catch(e=>{console.error(e)}),f.addEventListener("click",function(){q.value=l.textContent,k.value=d.textContent,((e,t,n)=>{t.forEach(t=>{r(e,t,n)})})(b,[q,k],t),J(S)}),i.addEventListener("click",()=>{J(u)}),v.addEventListener("click",()=>{H(u)}),y.addEventListener("click",()=>{H(S)}),L.addEventListener("click",()=>{J(g)}),C.addEventListener("click",()=>{H(g)}),P.addEventListener("click",()=>{H(N)}),R.addEventListener("click",()=>{H(I)}),T.addEventListener("click",()=>{H(I)}),m.addEventListener("submit",function(r){r.preventDefault();const n=r.submitter;e(n,!0,"Save","Saving..."),j.editAvatarImage({avatar:_.value}).then(e=>{e&&(c.src=e.avatar,o(h,t),H(u),r.target.reset())}).catch(e=>{console.error(e)}).finally(()=>{e(n,!1,"Save","Saving...")})}),b.addEventListener("submit",function(r){r.preventDefault();const n=r.submitter;e(n,!0,"Save","Saving..."),j.editUserInfo({name:q.value,about:k.value}).then(e=>{e&&(l.textContent=e.name,d.textContent=e.about,o(p,t),H(S),r.target.reset())}).catch(e=>{console.error(e)}).finally(()=>{e(n,!1,"Save","Saving...")})}),U.addEventListener("submit",function(r){r.preventDefault();const n=r.submitter;e(n,!0,"Save","Saving..."),j.getNewCard({name:x.value,link:$.value}).then(e=>{if(e){const n=K(e);G.prepend(n),o(E,t),H(g),r.target.reset()}}).catch(e=>{console.error(e)}).finally(()=>{e(n,!1,"Save","Saving...")})}),A.addEventListener("submit",function(t){t.preventDefault();const r=t.submitter;e(r,!0,"Delete","Deleting..."),j.removeCard(D).then(()=>{w.remove(),H(I)}).catch(e=>{console.error(e)}).finally(()=>{e(r,!1,"Delete","Deleting...")})});const F=document.querySelector("#card-template").content.querySelector(".card"),G=document.querySelector(".cards__list");function K(e){const t=F.cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),o=t.querySelector(".card__like-button"),a=t.querySelector(".card__delete-button");return r.textContent=e.name,n.src=e.link,n.alt=e.name,e.isLiked?o.classList.add("card__like-button_active"):o.classList.remove("card__like-button_active"),o.addEventListener("click",t=>function(e,t){const r=e.currentTarget,n=r.classList.contains("card__like-button_active");j.changeLike(t,n).then(()=>{r.classList.toggle("card__like-button_active")}).catch(e=>{console.error(e)})}(t,e._id)),a.addEventListener("click",()=>function(e,t){w=e,D=t,J(I)}(t,e._id)),n.addEventListener("click",function(){B.src=e.link,B.alt=e.name,O.textContent=e.name,J(N)}),t}}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,