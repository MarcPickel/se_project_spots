!function(){"use strict";function e(e,t,r,o){e.textContent=t?o:r}const t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},r=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},o=(e,t,r)=>{(e=>e.some(e=>!e.validity.valid))(e)?n(t,r):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},n=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)};var a;a=t,document.querySelectorAll(a.formSelector).forEach(e=>{((e,t)=>{const n=Array.from(e.querySelectorAll(t.inputSelector)),a=e.querySelector(t.submitButtonSelector);o(n,a,t),n.forEach(s=>{s.addEventListener("input",function(){((e,t,o)=>{t.validity.valid?r(e,t,o):((e,t,r,o)=>{e.querySelector(`#${t.id}-error`).textContent=r,t.classList.add(o.inputErrorClass)})(e,t,t.validationMessage,o)})(e,s,t),o(n,a,t)})})})(e,a)});const s=document.querySelector(".profile__avatar-container"),i=s.querySelector(".profile__avatar"),c=s.querySelector(".profile__avatar-button"),l=document.querySelector(".profile__name"),d=document.querySelector(".profile__description"),u=document.querySelector("#avatar-modal"),m=u.querySelector("#profile-avatar-form"),_=m.querySelector("#avatar-image-input"),v=u.querySelector(".modal__submit-button"),h=u.querySelector(".modal__close-button"),f=document.querySelector(".profile__edit-button"),S=document.querySelector("#edit-profile-modal"),y=S.querySelector(".modal__submit-button"),b=S.querySelector(".modal__close-button"),p=S.querySelector("#edit-profile-form"),q=S.querySelector("#profile-name-input"),E=S.querySelector("#profile-description-input"),k=document.querySelector(".profile__add-button"),g=document.querySelector("#new-post-modal"),L=g.querySelector(".modal__submit-button"),C=g.querySelector(".modal__close-button"),$=g.querySelector("#new-post-form"),j=g.querySelector("#card-image-input"),U=g.querySelector("#card-caption-input");let P,x;const w=document.querySelector("#delete-card-modal"),D=w.querySelector(".modal__form"),I=w.querySelector(".modal__close-button"),A=document.querySelector("#preview-modal"),T=A.querySelector(".modal__close-button"),N=A.querySelector(".modal__image"),B=A.querySelector(".modal__caption"),O=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}editAvatarImage({avatar:e}){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}editUserInfo({name:e,about:t}){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}getNewCard({name:e,link:t}){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}removeCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}changeLike(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"5ef325c5-f7c1-4719-bb32-13415ad57957","Content-Type":"application/json"}});function J(e){e.classList.add("modal_is-opened"),e.addEventListener("mousedown",z),document.addEventListener("keydown",M)}function H(e){e.classList.remove("modal_is-opened"),e.removeEventListener("mousedown",z),document.removeEventListener("keydown",M)}function z(e){e.target.classList.contains("modal")&&H(e.target)}function M(e){if("Escape"===e.key){const e=document.querySelector(".modal_is-opened");e&&H(e)}}O.getAppInfo().then(([e,t])=>{e.forEach(function(e){const t=K(e);G.append(t)}),i&&(i.src=t.avatar,i.alt=t.name),l.textContent=t.name,d.textContent=t.about}).catch(e=>{console.error(e)}),f.addEventListener("click",function(){q.value=l.textContent,E.value=d.textContent,((e,t,o)=>{t.forEach(t=>{r(e,t,o)})})(p,[q,E],t),J(S)}),c.addEventListener("click",()=>{J(u)}),h.addEventListener("click",()=>{H(u)}),b.addEventListener("click",()=>{H(S)}),k.addEventListener("click",()=>{J(g)}),C.addEventListener("click",()=>{H(g)}),T.addEventListener("click",()=>{H(A)}),I.addEventListener("click",()=>{H(w)}),m.addEventListener("submit",function(r){r.preventDefault();const o=r.submitter;e(o,!0,"Save","Saving..."),O.editAvatarImage({avatar:_.value}).then(e=>{e&&(i.src=e.avatar,n(v,t),H(u),r.target.reset())}).catch(e=>{console.error(e)}).finally(()=>{e(o,!1,"Save","Saving...")})}),p.addEventListener("submit",function(r){r.preventDefault();const o=r.submitter;e(o,!0,"Save","Saving..."),O.editUserInfo({name:q.value,about:E.value}).then(e=>{e&&(l.textContent=e.name,d.textContent=e.about,n(y,t),H(S),r.target.reset())}).catch(e=>{console.error(e)}).finally(()=>{e(o,!1,"Save","Saving...")})}),$.addEventListener("submit",function(r){r.preventDefault();const o=r.submitter;e(o,!0,"Save","Saving..."),O.getNewCard({name:U.value,link:j.value}).then(e=>{if(e){const o=K({name:e.name,link:e.link});G.prepend(o),n(L,t),H(g),r.target.reset()}}).catch(e=>{console.error(e)}).finally(()=>{e(o,!1,"Save","Saving...")})}),D.addEventListener("submit",function(t){t.preventDefault();const r=t.submitter;e(r,!0,"Delete","Deleting..."),O.removeCard(x).then(()=>{P.remove(),H(w)}).catch(e=>{console.error(e)}).finally(()=>{e(r,!1,"Delete","Deleting...")})});const F=document.querySelector("#card-template").content.querySelector(".card"),G=document.querySelector(".cards__list");function K(e){const t=F.cloneNode(!0),r=t.querySelector(".card__title"),o=t.querySelector(".card__image"),n=t.querySelector(".card__like-button"),a=t.querySelector(".card__delete-button");return r.textContent=e.name,o.src=e.link,o.alt=e.name,e.isLiked?n.classList.add("card__like-button_active"):n.classList.remove("card__like-button_active"),n.addEventListener("click",t=>function(e,t){const r=e.currentTarget,o=r.classList.contains("card__like-button_active");O.changeLike(t,o).then(()=>{r.classList.toggle("card__like-button_active")}).catch(e=>{console.error(e)})}(t,e._id)),a.addEventListener("click",()=>function(e,t){P=e,x=t,J(w)}(t,e._id)),o.addEventListener("click",function(){N.src=e.link,N.alt=e.name,B.textContent=e.name,J(A)}),t}}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,